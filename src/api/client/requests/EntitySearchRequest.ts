// This file was auto-generated by Fern from our API Definition.

/**
 * @example
 *     {
 *         query: "query"
 *     }
 */
export interface EntitySearchRequest {
    /** Search query text */
    query: string;
    /** Specific entity IDs to search within */
    entity_ids?: string[];
    /** Entity types to search (file, note, etc) */
    entity_types?: string[];
    /** Search mode */
    mode?: EntitySearchRequest.Mode;
    /** What to return - chunks, entity info, or full text */
    return_format?: EntitySearchRequest.ReturnFormat;
    /** Max results */
    limit?: number;
    /** Minimum similarity score */
    similarity_threshold?: number;
}

export namespace EntitySearchRequest {
    /** Search mode */
    export const Mode = {
        Hybrid: "hybrid",
        Keyword: "keyword",
        Semantic: "semantic",
    } as const;
    export type Mode = (typeof Mode)[keyof typeof Mode];
    /** What to return - chunks, entity info, or full text */
    export const ReturnFormat = {
        Chunks: "chunks",
        Entities: "entities",
        FullText: "full_text",
    } as const;
    export type ReturnFormat = (typeof ReturnFormat)[keyof typeof ReturnFormat];
}
