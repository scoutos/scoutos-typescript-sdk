/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         select: "select"
 *     }
 */
export interface FluentQueryRequest {
    /** Entity type to select */
    select: string;
    /** WHERE conditions: [{field, operator, value}, ...] */
    where?: Record<string, unknown>[];
    /** Relations to include (auto-JOIN) */
    with?: FluentQueryRequest.With.Item[];
    /** Order by: [{field, direction}, ...] */
    orderBy?: Record<string, string>[];
    /** Max results */
    limit?: number;
    /** Offset for pagination */
    offset?: number;
    /** Cursor for pagination */
    cursor?: string;
    /** Include total count */
    count?: boolean;
    /** Group by field */
    groupBy?: string;
    /** Aggregations: {alias: {function, field}} */
    aggregations?: Record<string, Record<string, string>>;
}

export namespace FluentQueryRequest {
    export type With = With.Item[];

    export namespace With {
        export type Item = string | Record<string, unknown>;
    }
}
