/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Scout from "../../../api/index";
import * as core from "../../../core";
import { EntitySearchRequestMode } from "../../types/EntitySearchRequestMode";
import { EntitySearchRequestReturnFormat } from "../../types/EntitySearchRequestReturnFormat";

export const EntitySearchRequest: core.serialization.Schema<
    serializers.EntitySearchRequest.Raw,
    Scout.EntitySearchRequest
> = core.serialization.object({
    query: core.serialization.string(),
    entity_ids: core.serialization.list(core.serialization.string()).optional(),
    entity_types: core.serialization.list(core.serialization.string()).optional(),
    mode: EntitySearchRequestMode.optional(),
    return_format: EntitySearchRequestReturnFormat.optional(),
    limit: core.serialization.number().optional(),
    similarity_threshold: core.serialization.number().optional(),
});

export declare namespace EntitySearchRequest {
    export interface Raw {
        query: string;
        entity_ids?: string[] | null;
        entity_types?: string[] | null;
        mode?: EntitySearchRequestMode.Raw | null;
        return_format?: EntitySearchRequestReturnFormat.Raw | null;
        limit?: number | null;
        similarity_threshold?: number | null;
    }
}
