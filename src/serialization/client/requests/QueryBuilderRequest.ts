/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Scout from "../../../api/index";
import * as core from "../../../core";
import { QueryBuilderRequestTagMode } from "../../types/QueryBuilderRequestTagMode";
import { QueryBuilderRequestSortBy } from "../../types/QueryBuilderRequestSortBy";
import { QueryBuilderRequestSortDirection } from "../../types/QueryBuilderRequestSortDirection";
import { QueryBuilderRequestGroupByItem } from "../../types/QueryBuilderRequestGroupByItem";

export const QueryBuilderRequest: core.serialization.Schema<
    serializers.QueryBuilderRequest.Raw,
    Scout.QueryBuilderRequest
> = core.serialization.object({
    limit: core.serialization.number().optional(),
    offset: core.serialization.number().optional(),
    text_query: core.serialization.string().optional(),
    time_range_start: core.serialization.date().optional(),
    time_range_end: core.serialization.date().optional(),
    last_hours: core.serialization.number().optional(),
    last_days: core.serialization.number().optional(),
    agent_types: core.serialization.list(core.serialization.string()).optional(),
    agent_ids: core.serialization.list(core.serialization.string()).optional(),
    object_types: core.serialization.list(core.serialization.string()).optional(),
    object_ids: core.serialization.list(core.serialization.string()).optional(),
    action_types: core.serialization.list(core.serialization.string()).optional(),
    action_statuses: core.serialization.list(core.serialization.string()).optional(),
    specific_actions: core.serialization.list(core.serialization.string()).optional(),
    tags: core.serialization.list(core.serialization.string()).optional(),
    exclude_tags: core.serialization.list(core.serialization.string()).optional(),
    tag_mode: QueryBuilderRequestTagMode.optional(),
    min_duration_minutes: core.serialization.number().optional(),
    max_duration_minutes: core.serialization.number().optional(),
    customer_id: core.serialization.string().optional(),
    team_name: core.serialization.string().optional(),
    deal_stages: core.serialization.list(core.serialization.string()).optional(),
    revenue_impact: core.serialization.boolean().optional(),
    churn_risk: core.serialization.boolean().optional(),
    escalation_level: core.serialization.string().optional(),
    trace_id: core.serialization.string().optional(),
    triggered_by: core.serialization.string().optional(),
    sort_by: QueryBuilderRequestSortBy.optional(),
    sort_direction: QueryBuilderRequestSortDirection.optional(),
    count_only: core.serialization.boolean().optional(),
    explain: core.serialization.boolean().optional(),
    aggregate: core.serialization.boolean().optional(),
    group_by: core.serialization.list(QueryBuilderRequestGroupByItem).optional(),
    group_by_tag_prefix: core.serialization.string().optional(),
});

export declare namespace QueryBuilderRequest {
    export interface Raw {
        limit?: number | null;
        offset?: number | null;
        text_query?: string | null;
        time_range_start?: string | null;
        time_range_end?: string | null;
        last_hours?: number | null;
        last_days?: number | null;
        agent_types?: string[] | null;
        agent_ids?: string[] | null;
        object_types?: string[] | null;
        object_ids?: string[] | null;
        action_types?: string[] | null;
        action_statuses?: string[] | null;
        specific_actions?: string[] | null;
        tags?: string[] | null;
        exclude_tags?: string[] | null;
        tag_mode?: QueryBuilderRequestTagMode.Raw | null;
        min_duration_minutes?: number | null;
        max_duration_minutes?: number | null;
        customer_id?: string | null;
        team_name?: string | null;
        deal_stages?: string[] | null;
        revenue_impact?: boolean | null;
        churn_risk?: boolean | null;
        escalation_level?: string | null;
        trace_id?: string | null;
        triggered_by?: string | null;
        sort_by?: QueryBuilderRequestSortBy.Raw | null;
        sort_direction?: QueryBuilderRequestSortDirection.Raw | null;
        count_only?: boolean | null;
        explain?: boolean | null;
        aggregate?: boolean | null;
        group_by?: QueryBuilderRequestGroupByItem.Raw[] | null;
        group_by_tag_prefix?: string | null;
    }
}
