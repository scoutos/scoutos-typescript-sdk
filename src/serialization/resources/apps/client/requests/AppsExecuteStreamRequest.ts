/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Scout from "../../../../../api/index";
import * as core from "../../../../../core";
import { FlowDag } from "../../../../types/FlowDag";

export const AppsExecuteStreamRequest: core.serialization.Schema<
    serializers.AppsExecuteStreamRequest.Raw,
    Scout.AppsExecuteStreamRequest
> = core.serialization.object({
    config: FlowDag.optional(),
    id: core.serialization.string().optional(),
    inputs: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    streaming: core.serialization.boolean().optional(),
    organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
    threadId: core.serialization.property("thread_id", core.serialization.string().optional()),
    environment: core.serialization.string().optional(),
});

export declare namespace AppsExecuteStreamRequest {
    interface Raw {
        config?: FlowDag.Raw | null;
        id?: string | null;
        inputs: Record<string, unknown>;
        streaming?: boolean | null;
        organization_id?: string | null;
        thread_id?: string | null;
        environment?: string | null;
    }
}
