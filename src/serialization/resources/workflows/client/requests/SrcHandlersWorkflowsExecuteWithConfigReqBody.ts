/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Scout from "../../../../../api/index";
import * as core from "../../../../../core";
import { SrcHandlersWorkflowsExecuteWithConfigReqBodyInputsValue } from "../../types/SrcHandlersWorkflowsExecuteWithConfigReqBodyInputsValue";
import { WorkflowConfigInput } from "../../../../types/WorkflowConfigInput";

export const SrcHandlersWorkflowsExecuteWithConfigReqBody: core.serialization.Schema<
    serializers.SrcHandlersWorkflowsExecuteWithConfigReqBody.Raw,
    Omit<Scout.SrcHandlersWorkflowsExecuteWithConfigReqBody, "environment" | "revision_id" | "session_id">
> = core.serialization.object({
    workflow_key: core.serialization.string().optional(),
    inputs: core.serialization
        .record(core.serialization.string(), SrcHandlersWorkflowsExecuteWithConfigReqBodyInputsValue)
        .optional(),
    streaming: core.serialization.boolean().optional(),
    workflow_config: WorkflowConfigInput,
});

export declare namespace SrcHandlersWorkflowsExecuteWithConfigReqBody {
    interface Raw {
        workflow_key?: string | null;
        inputs?: Record<string, SrcHandlersWorkflowsExecuteWithConfigReqBodyInputsValue.Raw> | null;
        streaming?: boolean | null;
        workflow_config: WorkflowConfigInput.Raw;
    }
}
