/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { AppConfigOutput } from "./AppConfigOutput";
import { Identity } from "./Identity";

export const App: core.serialization.ObjectSchema<serializers.App.Raw, Scout.App> = core.serialization.object({
    appConfig: core.serialization.property("app_config", AppConfigOutput),
    lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    createdBy: core.serialization.property("created_by", Identity),
    lastUpdatedBy: core.serialization.property("last_updated_by", Identity),
    revisionId: core.serialization.property("revision_id", core.serialization.string()),
    appId: core.serialization.property("app_id", core.serialization.string()),
    isDraft: core.serialization.property("is_draft", core.serialization.boolean().optional()),
});

export declare namespace App {
    interface Raw {
        app_config: AppConfigOutput.Raw;
        last_updated_at: string;
        created_at: string;
        created_by: Identity.Raw;
        last_updated_by: Identity.Raw;
        revision_id: string;
        app_id: string;
        is_draft?: boolean | null;
    }
}
