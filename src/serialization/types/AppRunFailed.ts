/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { EventName } from "./EventName";
import { EventVersion } from "./EventVersion";
import { AppRunFailedEnvironment } from "./AppRunFailedEnvironment";
import { AppRunFailedData } from "./AppRunFailedData";

export const AppRunFailed: core.serialization.ObjectSchema<serializers.AppRunFailed.Raw, Scout.AppRunFailed> =
    core.serialization.object({
        organizationId: core.serialization.property("organization_id", core.serialization.string()),
        id: core.serialization.string().optional(),
        correlationId: core.serialization.property("correlation_id", core.serialization.string().optional()),
        name: EventName.optional(),
        version: EventVersion.optional(),
        environment: AppRunFailedEnvironment,
        timestamp: core.serialization.string().optional(),
        data: AppRunFailedData,
    });

export declare namespace AppRunFailed {
    interface Raw {
        organization_id: string;
        id?: string | null;
        correlation_id?: string | null;
        name?: EventName.Raw | null;
        version?: EventVersion.Raw | null;
        environment: AppRunFailedEnvironment.Raw;
        timestamp?: string | null;
        data: AppRunFailedData.Raw;
    }
}
