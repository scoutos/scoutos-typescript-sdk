/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { BlockRunFailedEnvironment } from "./BlockRunFailedEnvironment";
import { BlockRunFailedData } from "./BlockRunFailedData";
import { EventVersion } from "./EventVersion";

export const BlockRunFailed: core.serialization.ObjectSchema<serializers.BlockRunFailed.Raw, Scout.BlockRunFailed> =
    core.serialization.object({
        organization_id: core.serialization.string(),
        id: core.serialization.string().optional(),
        correlation_id: core.serialization.string().optional(),
        name: core.serialization.stringLiteral("block_run_failed"),
        environment: BlockRunFailedEnvironment,
        timestamp: core.serialization.string().optional(),
        data: BlockRunFailedData,
        price: core.serialization.string(),
        event_type: core.serialization.string(),
        version: EventVersion,
    });

export declare namespace BlockRunFailed {
    export interface Raw {
        organization_id: string;
        id?: string | null;
        correlation_id?: string | null;
        name: "block_run_failed";
        environment: BlockRunFailedEnvironment.Raw;
        timestamp?: string | null;
        data: BlockRunFailedData.Raw;
        price: string;
        event_type: string;
        version: EventVersion.Raw;
    }
}
