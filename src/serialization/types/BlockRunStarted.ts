/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { EventVersion } from "./EventVersion";
import { BlockRunStartedEnvironment } from "./BlockRunStartedEnvironment";
import { BlockRunStartedData } from "./BlockRunStartedData";

export const BlockRunStarted: core.serialization.ObjectSchema<serializers.BlockRunStarted.Raw, Scout.BlockRunStarted> =
    core.serialization.object({
        organization_id: core.serialization.string(),
        id: core.serialization.string().optional(),
        correlation_id: core.serialization.string().optional(),
        name: core.serialization.stringLiteral("block_run_started"),
        version: EventVersion.optional(),
        environment: BlockRunStartedEnvironment,
        timestamp: core.serialization.string().optional(),
        data: BlockRunStartedData,
    });

export declare namespace BlockRunStarted {
    interface Raw {
        organization_id: string;
        id?: string | null;
        correlation_id?: string | null;
        name: "block_run_started";
        version?: EventVersion.Raw | null;
        environment: BlockRunStartedEnvironment.Raw;
        timestamp?: string | null;
        data: BlockRunStartedData.Raw;
    }
}
