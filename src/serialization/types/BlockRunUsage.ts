/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";

export const BlockRunUsage: core.serialization.ObjectSchema<serializers.BlockRunUsage.Raw, Scout.BlockRunUsage> =
    core.serialization.object({
        organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
        workflowRunType: core.serialization.property("workflow_run_type", core.serialization.string().optional()),
        blockArchetypeId: core.serialization.property("block_archetype_id", core.serialization.string().optional()),
        executionDate: core.serialization.property("execution_date", core.serialization.string().optional()),
        totalCost: core.serialization.property("total_cost", core.serialization.number()),
        totalExecutionDurationMs: core.serialization.property(
            "total_execution_duration_ms",
            core.serialization.number().optional()
        ),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
    });

export declare namespace BlockRunUsage {
    interface Raw {
        organization_id?: string | null;
        workflow_run_type?: string | null;
        block_archetype_id?: string | null;
        execution_date?: string | null;
        total_cost: number;
        total_execution_duration_ms?: number | null;
        display_name?: string | null;
    }
}
