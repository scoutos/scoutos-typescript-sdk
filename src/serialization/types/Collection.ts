/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { CollectionConfigOutput } from "./CollectionConfigOutput";
import { Identity } from "./Identity";

export const Collection: core.serialization.ObjectSchema<serializers.Collection.Raw, Scout.Collection> =
    core.serialization.object({
        collectionConfig: core.serialization.property("collection_config", CollectionConfigOutput),
        lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        createdBy: core.serialization.property("created_by", Identity),
        lastUpdatedBy: core.serialization.property("last_updated_by", Identity),
        revisionId: core.serialization.property("revision_id", core.serialization.string()),
        collectionId: core.serialization.property("collection_id", core.serialization.string()),
    });

export declare namespace Collection {
    interface Raw {
        collection_config: CollectionConfigOutput.Raw;
        last_updated_at: string;
        created_at: string;
        created_by: Identity.Raw;
        last_updated_by: Identity.Raw;
        revision_id: string;
        collection_id: string;
    }
}
