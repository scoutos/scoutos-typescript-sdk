/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { CollectionViewStateInputViewsValue } from "./CollectionViewStateInputViewsValue";

export const CollectionViewStateInput: core.serialization.ObjectSchema<
    serializers.CollectionViewStateInput.Raw,
    Scout.CollectionViewStateInput
> = core.serialization.object({
    views: core.serialization.record(core.serialization.string(), CollectionViewStateInputViewsValue).optional(),
    view_ids: core.serialization.list(core.serialization.string()).optional(),
    active_view_id: core.serialization.string().optional(),
    active_table_id: core.serialization.string().optional(),
    display_settings: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    last_synced_at: core.serialization.date().optional(),
    created_at: core.serialization.date().optional(),
    updated_at: core.serialization.date().optional(),
    organization_id: core.serialization.string(),
    collection_id: core.serialization.string(),
});

export declare namespace CollectionViewStateInput {
    export interface Raw {
        views?: Record<string, CollectionViewStateInputViewsValue.Raw> | null;
        view_ids?: string[] | null;
        active_view_id?: string | null;
        active_table_id?: string | null;
        display_settings?: Record<string, unknown> | null;
        last_synced_at?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        organization_id: string;
        collection_id: string;
    }
}
