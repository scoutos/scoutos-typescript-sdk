/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { MultiPageCrawlerSettingsOutputScraper } from "./MultiPageCrawlerSettingsOutputScraper";
import { MultiPageCrawlerSettingsOutputTextExtractor } from "./MultiPageCrawlerSettingsOutputTextExtractor";

export const MultiPageCrawlerSettingsOutput: core.serialization.ObjectSchema<
    serializers.MultiPageCrawlerSettingsOutput.Raw,
    Scout.MultiPageCrawlerSettingsOutput
> = core.serialization.object({
    scraper: MultiPageCrawlerSettingsOutputScraper.optional(),
    text_extractor: MultiPageCrawlerSettingsOutputTextExtractor.optional(),
    allow: core.serialization.string().optional(),
    deny: core.serialization.string().optional(),
    exclude_patterns: core.serialization.string().optional(),
    strip: core.serialization.string().optional(),
    strip_urls: core.serialization.boolean().optional(),
    allowed_domains: core.serialization.string().optional(),
    max_depth: core.serialization.number().optional(),
    max_page_count: core.serialization.number().optional(),
});

export declare namespace MultiPageCrawlerSettingsOutput {
    interface Raw {
        scraper?: MultiPageCrawlerSettingsOutputScraper.Raw | null;
        text_extractor?: MultiPageCrawlerSettingsOutputTextExtractor.Raw | null;
        allow?: string | null;
        deny?: string | null;
        exclude_patterns?: string | null;
        strip?: string | null;
        strip_urls?: boolean | null;
        allowed_domains?: string | null;
        max_depth?: number | null;
        max_page_count?: number | null;
    }
}
