/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { TypescriptAutomationConfig } from "./TypescriptAutomationConfig";
import { SelectOptionItem } from "./SelectOptionItem";

export const MultiSelectColumn: core.serialization.ObjectSchema<
    serializers.MultiSelectColumn.Raw,
    Scout.MultiSelectColumn
> = core.serialization.object({
    column_id: core.serialization.string().optional(),
    column_display_name: core.serialization.string().optional(),
    column_type: core.serialization.stringLiteral("multi-select"),
    data_type: core.serialization.stringLiteral("string[]").optional(),
    hidden: core.serialization.boolean().optional(),
    automation_config: TypescriptAutomationConfig,
    options: core.serialization.list(SelectOptionItem).optional(),
});

export declare namespace MultiSelectColumn {
    export interface Raw {
        column_id?: string | null;
        column_display_name?: string | null;
        column_type: "multi-select";
        data_type?: "string[]" | null;
        hidden?: boolean | null;
        automation_config: TypescriptAutomationConfig.Raw;
        options?: SelectOptionItem.Raw[] | null;
    }
}
