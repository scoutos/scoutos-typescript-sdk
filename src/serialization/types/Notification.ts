/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { NotificationType } from "./NotificationType";
import { NotificationSeverity } from "./NotificationSeverity";
import { NotificationAction } from "./NotificationAction";

export const Notification: core.serialization.ObjectSchema<serializers.Notification.Raw, Scout.Notification> =
    core.serialization.object({
        type: NotificationType.optional(),
        severity: NotificationSeverity.optional(),
        title: core.serialization.string().optional(),
        message: core.serialization.string().optional(),
        actions: core.serialization.list(NotificationAction).optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    });

export declare namespace Notification {
    export interface Raw {
        type?: NotificationType.Raw | null;
        severity?: NotificationSeverity.Raw | null;
        title?: string | null;
        message?: string | null;
        actions?: NotificationAction.Raw[] | null;
        metadata?: Record<string, unknown> | null;
    }
}
