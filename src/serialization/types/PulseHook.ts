/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { PulseTargetConfig } from "./PulseTargetConfig";

export const PulseHook: core.serialization.ObjectSchema<serializers.PulseHook.Raw, Scout.PulseHook> =
    core.serialization.object({
        id: core.serialization.string(),
        organization_id: core.serialization.string(),
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        target_id: core.serialization.string(),
        status: core.serialization.string().optional(),
        response_mode: core.serialization.string().optional(),
        allowed_methods: core.serialization.list(core.serialization.string()).optional(),
        max_payload_size: core.serialization.number().optional(),
        secret: core.serialization.string().optional(),
        url: core.serialization.string().optional(),
        created_at: core.serialization.date(),
        updated_at: core.serialization.date(),
        created_by: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        target_type: core.serialization.stringLiteral("pulse"),
        target_config: PulseTargetConfig,
    });

export declare namespace PulseHook {
    export interface Raw {
        id: string;
        organization_id: string;
        name: string;
        description?: string | null;
        target_id: string;
        status?: string | null;
        response_mode?: string | null;
        allowed_methods?: string[] | null;
        max_payload_size?: number | null;
        secret?: string | null;
        url?: string | null;
        created_at: string;
        updated_at: string;
        created_by?: Record<string, unknown> | null;
        target_type: "pulse";
        target_config: PulseTargetConfig.Raw;
    }
}
