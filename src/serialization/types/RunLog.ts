/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { BlockRun } from "./BlockRun";

export const RunLog: core.serialization.ObjectSchema<serializers.RunLog.Raw, Scout.RunLog> = core.serialization.object({
    workflow_display_name: core.serialization.string(),
    workflow_run_id: core.serialization.string(),
    workflow_id: core.serialization.string(),
    status: core.serialization.string(),
    session_id: core.serialization.string(),
    cost: core.serialization.number(),
    blocks: core.serialization.record(core.serialization.string(), BlockRun),
    output: core.serialization.unknown(),
    elapsed_time_ms: core.serialization.number(),
    timestamp_start: core.serialization.date(),
    timestamp_end: core.serialization.date(),
    message: core.serialization.string().optional(),
    gcs_log_path: core.serialization.string().optional(),
});

export declare namespace RunLog {
    export interface Raw {
        workflow_display_name: string;
        workflow_run_id: string;
        workflow_id: string;
        status: string;
        session_id: string;
        cost: number;
        blocks: Record<string, BlockRun.Raw>;
        output?: unknown;
        elapsed_time_ms: number;
        timestamp_start: string;
        timestamp_end: string;
        message?: string | null;
        gcs_log_path?: string | null;
    }
}
