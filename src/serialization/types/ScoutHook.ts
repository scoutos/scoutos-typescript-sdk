/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { ActorIdentity } from "./ActorIdentity";
import { ScoutHookConfigHttp } from "./ScoutHookConfigHttp";
import { ScoutHookEventTrigger } from "./ScoutHookEventTrigger";

export const ScoutHook: core.serialization.ObjectSchema<serializers.ScoutHook.Raw, Scout.ScoutHook> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        doc_type: core.serialization.stringLiteral("scout_hook").optional(),
        created_by: ActorIdentity,
        updated_by: ActorIdentity,
        created_at: core.serialization.date().optional(),
        updated_at: core.serialization.date().optional(),
        is_seed: core.serialization.boolean().optional(),
        hook_config: ScoutHookConfigHttp,
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        parent: core.serialization.string(),
        triggering_events: core.serialization.list(ScoutHookEventTrigger),
    });

export declare namespace ScoutHook {
    export interface Raw {
        id?: string | null;
        doc_type?: "scout_hook" | null;
        created_by: ActorIdentity.Raw;
        updated_by: ActorIdentity.Raw;
        created_at?: string | null;
        updated_at?: string | null;
        is_seed?: boolean | null;
        hook_config: ScoutHookConfigHttp.Raw;
        name: string;
        description?: string | null;
        metadata: Record<string, unknown>;
        parent: string;
        triggering_events: ScoutHookEventTrigger.Raw[];
    }
}
