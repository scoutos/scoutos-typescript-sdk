/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { SlackTriggerConfigOutputAction } from "./SlackTriggerConfigOutputAction";
import { TriggerStatus } from "./TriggerStatus";
import { RulesOutput } from "./RulesOutput";

export const SlackTriggerConfigOutput: core.serialization.ObjectSchema<
    serializers.SlackTriggerConfigOutput.Raw,
    Scout.SlackTriggerConfigOutput
> = core.serialization.object({
    trigger_display_name: core.serialization.stringLiteral("When message is sent to Slack Channel").optional(),
    trigger_type: core.serialization.stringLiteral("slack.message"),
    action: SlackTriggerConfigOutputAction,
    status: TriggerStatus.optional(),
    run_conditions: RulesOutput.optional(),
});

export declare namespace SlackTriggerConfigOutput {
    export interface Raw {
        trigger_display_name?: "When message is sent to Slack Channel" | null;
        trigger_type: "slack.message";
        action: SlackTriggerConfigOutputAction.Raw;
        status?: TriggerStatus.Raw | null;
        run_conditions?: RulesOutput.Raw | null;
    }
}
