/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { FriendlyPaymentMethods } from "./FriendlyPaymentMethods";
import { Subscription } from "./Subscription";
import { BillingCycles } from "./BillingCycles";
import { Invoice } from "./Invoice";
import { DeterminedBillingLimits } from "./DeterminedBillingLimits";

export const SrcAppHttpRoutesBillingGetBillingData: core.serialization.ObjectSchema<
    serializers.SrcAppHttpRoutesBillingGetBillingData.Raw,
    Scout.SrcAppHttpRoutesBillingGetBillingData
> = core.serialization.object({
    payment_methods: core.serialization.list(FriendlyPaymentMethods),
    has_payment_method: core.serialization.boolean(),
    has_default_payment_method: core.serialization.boolean(),
    needs_billing_email: core.serialization.boolean(),
    active_plan: Subscription.optional(),
    future_plans: core.serialization.list(Subscription),
    billing_cycles: BillingCycles.optional(),
    failed_invoices: core.serialization.list(Invoice),
    has_failed_payment: core.serialization.boolean(),
    workflow_invocations: core.serialization.number(),
    billing_limits: DeterminedBillingLimits,
    agent_interactions: core.serialization.number(),
});

export declare namespace SrcAppHttpRoutesBillingGetBillingData {
    export interface Raw {
        payment_methods: FriendlyPaymentMethods.Raw[];
        has_payment_method: boolean;
        has_default_payment_method: boolean;
        needs_billing_email: boolean;
        active_plan?: Subscription.Raw | null;
        future_plans: Subscription.Raw[];
        billing_cycles?: BillingCycles.Raw | null;
        failed_invoices: Invoice.Raw[];
        has_failed_payment: boolean;
        workflow_invocations: number;
        billing_limits: DeterminedBillingLimits.Raw;
        agent_interactions: number;
    }
}
