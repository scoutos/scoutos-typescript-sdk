/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { TableViewSettingsOutputRowHeight } from "./TableViewSettingsOutputRowHeight";
import { ViewFilter } from "./ViewFilter";

export const TableViewSettingsOutput: core.serialization.ObjectSchema<
    serializers.TableViewSettingsOutput.Raw,
    Scout.TableViewSettingsOutput
> = core.serialization.object({
    column_visibility: core.serialization.record(core.serialization.string(), core.serialization.boolean()).optional(),
    column_order: core.serialization.list(core.serialization.string()).optional(),
    column_widths: core.serialization.record(core.serialization.string(), core.serialization.number()).optional(),
    type: core.serialization.stringLiteral("table").optional(),
    row_height: TableViewSettingsOutputRowHeight.optional(),
    show_row_numbers: core.serialization.boolean().optional(),
    wrap_text: core.serialization.boolean().optional(),
    filters: core.serialization.list(ViewFilter).optional(),
});

export declare namespace TableViewSettingsOutput {
    export interface Raw {
        column_visibility?: Record<string, boolean> | null;
        column_order?: string[] | null;
        column_widths?: Record<string, number> | null;
        type?: "table" | null;
        row_height?: TableViewSettingsOutputRowHeight.Raw | null;
        show_row_numbers?: boolean | null;
        wrap_text?: boolean | null;
        filters?: ViewFilter.Raw[] | null;
    }
}
