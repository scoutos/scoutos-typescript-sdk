/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { WorkflowConfigOutput } from "./WorkflowConfigOutput";
import { Identity } from "./Identity";

export const Workflow: core.serialization.ObjectSchema<serializers.Workflow.Raw, Scout.Workflow> =
    core.serialization.object({
        workflowConfig: core.serialization.property("workflow_config", WorkflowConfigOutput),
        lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        createdBy: core.serialization.property("created_by", Identity),
        lastUpdatedBy: core.serialization.property("last_updated_by", Identity),
        revisionId: core.serialization.property("revision_id", core.serialization.string()),
        workflowId: core.serialization.property("workflow_id", core.serialization.string()),
        isDraft: core.serialization.property("is_draft", core.serialization.boolean().optional()),
    });

export declare namespace Workflow {
    interface Raw {
        workflow_config: WorkflowConfigOutput.Raw;
        last_updated_at: string;
        created_at: string;
        created_by: Identity.Raw;
        last_updated_by: Identity.Raw;
        revision_id: string;
        workflow_id: string;
        is_draft?: boolean | null;
    }
}
