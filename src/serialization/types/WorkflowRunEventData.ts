/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scout from "../../api/index";
import * as core from "../../core";
import { BlockRunCompleted } from "./BlockRunCompleted";
import { BlockRunFailed } from "./BlockRunFailed";
import { BlockRunStarted } from "./BlockRunStarted";
import { BlockStateUpdated } from "./BlockStateUpdated";
import { WorkflowRunCompleted } from "./WorkflowRunCompleted";
import { WorkflowRunFailed } from "./WorkflowRunFailed";
import { WorkflowRunStarted } from "./WorkflowRunStarted";

export const WorkflowRunEventData: core.serialization.Schema<
    serializers.WorkflowRunEventData.Raw,
    Scout.WorkflowRunEventData
> = core.serialization.undiscriminatedUnion([
    BlockRunCompleted,
    BlockRunFailed,
    BlockRunStarted,
    BlockStateUpdated,
    WorkflowRunCompleted,
    WorkflowRunFailed,
    WorkflowRunStarted,
]);

export declare namespace WorkflowRunEventData {
    type Raw =
        | BlockRunCompleted.Raw
        | BlockRunFailed.Raw
        | BlockRunStarted.Raw
        | BlockStateUpdated.Raw
        | WorkflowRunCompleted.Raw
        | WorkflowRunFailed.Raw
        | WorkflowRunStarted.Raw;
}
